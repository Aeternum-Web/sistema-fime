@page "/"

<PageTitle>Inicio - SistemaFIME</PageTitle>

<div style="max-width: 1000px; margin: 0 auto;">
    <!-- Hero Section -->
    <div style="text-align: center; padding: 3rem 1rem; background: linear-gradient(135deg, #007bff 0%, #0056b3 100%); border-radius: 8px; color: white; margin-bottom: 3rem;">
        <h1 style="font-size: 2.5rem; font-weight: 700; margin-bottom: 1rem;">¡Bienvenido a SistemaFIME!</h1>
        <p style="font-size: 1.2rem; opacity: 0.9; margin-bottom: 2rem; max-width: 600px; margin-left: auto; margin-right: auto;">
            Sistema de gestión moderno desarrollado con Blazor Server y PostgreSQL
        </p>
        <div style="display: flex; gap: 1rem; justify-content: center; flex-wrap: wrap;">
            <a href="/dashboard" class="btn btn-primary" style="text-decoration: none;">
                📊 Ver Dashboard
            </a>
            <a href="/fetchdata" class="btn btn-secondary" style="text-decoration: none;">
                🗄️ Probar Base de Datos
            </a>
        </div>
    </div>
    
    <!-- Features Section -->
    <div style="margin-bottom: 3rem;">
        <h2 style="text-align: center; font-size: 2rem; color: #212529; margin-bottom: 2rem;">Características Principales</h2>
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1.5rem; margin-bottom: 2rem;">
            @foreach (var feature in features)
            {
                <div style="background: white; padding: 2rem; border-radius: 8px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); text-align: center; transition: transform 0.2s;">
                    <div style="font-size: 3rem; margin-bottom: 1rem;">@feature.Icon</div>
                    <h3 style="font-size: 1.25rem; color: #212529; margin-bottom: 0.5rem;">@feature.Title</h3>
                    <p style="color: #6c757d; line-height: 1.6;">@feature.Description</p>
                </div>
            }
        </div>
    </div>
    
    <!-- Info Section -->
    <div style="margin-bottom: 3rem;">
        <div class="alert alert-info">
            <strong>💡 ¿Cómo funciona?</strong>
            <p>
                Esta aplicación utiliza <strong>Blazor Server</strong> para ejecutar código C# en el servidor
                y actualizar la interfaz de usuario a través de una conexión SignalR en tiempo real.
                Los datos se almacenan en <strong>PostgreSQL</strong> y todo se ejecuta en contenedores Docker.
            </p>
        </div>
    </div>
    
    <!-- Stats Section -->
    <div style="background: white; border-radius: 8px; padding: 2rem; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);">
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 2rem; text-align: center;">
            @foreach (var stat in stats)
            {
                <div>
                    <div style="font-size: 2rem; font-weight: 700; color: #007bff; margin-bottom: 0.5rem;">@stat.Value</div>
                    <div style="color: #6c757d; font-size: 0.875rem;">@stat.Label</div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private DateTime connectionTime = DateTime.Now;

    private List<FeatureItem> features = new()
    {
        new FeatureItem { Icon = "⚡", Title = "Blazor Server", Description = "Interfaz de usuario interactiva con C# en tiempo real" },
        new FeatureItem { Icon = "🗄️", Title = "PostgreSQL", Description = "Base de datos robusta y escalable para tus datos" },
        new FeatureItem { Icon = "🎨", Title = "CSS Vanilla", Description = "Diseño limpio sin dependencias externas" },
        new FeatureItem { Icon = "🐳", Title = "Docker", Description = "Despliegue fácil y consistente en cualquier entorno" },
        new FeatureItem { Icon = "📱", Title = "Responsive", Description = "Funciona perfectamente en dispositivos móviles" },
        new FeatureItem { Icon = "🔒", Title = "Seguro", Description = "Implementa las mejores prácticas de seguridad" }
    };

    private List<StatItem> stats = new();

    protected override void OnInitialized()
    {
        connectionTime = DateTime.Now;
        stats = new List<StatItem>
        {
            new StatItem { Value = DateTime.Now.Year.ToString(), Label = "Año actual" },
            new StatItem { Value = connectionTime.ToString("HH:mm"), Label = "Hora del servidor" },
            new StatItem { Value = "v1.0", Label = "Versión" }
        };
    }

    public class FeatureItem
    {
        public string Icon { get; set; } = "";
        public string Title { get; set; } = "";
        public string Description { get; set; } = "";
    }

    public class StatItem
    {
        public string Value { get; set; } = "";
        public string Label { get; set; } = "";
    }
}