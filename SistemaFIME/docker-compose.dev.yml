services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: sistemafime_postgres_dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - sistemafime_network_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Aplicación ASP.NET Core para desarrollo
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: sistemafime_web_dev
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - DOTNET_USE_POLLING_FILE_WATCHER=true
      - DOTNET_WATCH_RESTART_ON_RUDE_EDIT=true
    volumes:
      # Montar el código fuente para hot reload
      - .:/app
      - /app/bin
      - /app/obj
      - dotnet_packages:/root/.nuget/packages
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sistemafime_network_dev
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  postgres_data_dev:
  dotnet_packages:

networks:
  sistemafime_network_dev:
    driver: bridge